// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.12.4
// source: cli/v1/cliserver.proto

package cliserver

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ValidTime         string `protobuf:"bytes,3,opt,name=validTime,proto3" json:"validTime,omitempty"`
	State             string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Price             int64  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Weight            int64  `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	PackageType       string `protobuf:"bytes,7,opt,name=packageType,proto3" json:"packageType,omitempty"`
	AdditionalStretch bool   `protobuf:"varint,8,opt,name=additionalStretch,proto3" json:"additionalStretch,omitempty"`
}

func (x *OrderDto) Reset() {
	*x = OrderDto{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDto) ProtoMessage() {}

func (x *OrderDto) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDto.ProtoReflect.Descriptor instead.
func (*OrderDto) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{0}
}

func (x *OrderDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDto) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderDto) GetValidTime() string {
	if x != nil {
		return x.ValidTime
	}
	return ""
}

func (x *OrderDto) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OrderDto) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderDto) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *OrderDto) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *OrderDto) GetAdditionalStretch() bool {
	if x != nil {
		return x.AdditionalStretch
	}
	return false
}

type OrderId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OrderId) Reset() {
	*x = OrderId{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderId) ProtoMessage() {}

func (x *OrderId) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderId.ProtoReflect.Descriptor instead.
func (*OrderId) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{1}
}

func (x *OrderId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AcceptOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ValidTime         string `protobuf:"bytes,3,opt,name=validTime,proto3" json:"validTime,omitempty"`
	Price             int64  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Weight            int64  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	PackageType       string `protobuf:"bytes,6,opt,name=packageType,proto3" json:"packageType,omitempty"`
	AdditionalStretch bool   `protobuf:"varint,7,opt,name=additionalStretch,proto3" json:"additionalStretch,omitempty"`
}

func (x *AcceptOrderRequest) Reset() {
	*x = AcceptOrderRequest{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderRequest) ProtoMessage() {}

func (x *AcceptOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderRequest.ProtoReflect.Descriptor instead.
func (*AcceptOrderRequest) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AcceptOrderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AcceptOrderRequest) GetValidTime() string {
	if x != nil {
		return x.ValidTime
	}
	return ""
}

func (x *AcceptOrderRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AcceptOrderRequest) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AcceptOrderRequest) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *AcceptOrderRequest) GetAdditionalStretch() bool {
	if x != nil {
		return x.AdditionalStretch
	}
	return false
}

type AcceptOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptOrderResponse) Reset() {
	*x = AcceptOrderResponse{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderResponse) ProtoMessage() {}

func (x *AcceptOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderResponse.ProtoReflect.Descriptor instead.
func (*AcceptOrderResponse) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{3}
}

type AcceptReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *AcceptReturnRequest) Reset() {
	*x = AcceptReturnRequest{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptReturnRequest) ProtoMessage() {}

func (x *AcceptReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptReturnRequest.ProtoReflect.Descriptor instead.
func (*AcceptReturnRequest) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptReturnRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AcceptReturnRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AcceptReturnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptReturnResponse) Reset() {
	*x = AcceptReturnResponse{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptReturnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptReturnResponse) ProtoMessage() {}

func (x *AcceptReturnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptReturnResponse.ProtoReflect.Descriptor instead.
func (*AcceptReturnResponse) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{5}
}

type GiveOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderIds []*OrderId `protobuf:"bytes,1,rep,name=orderIds,proto3" json:"orderIds,omitempty"`
}

func (x *GiveOrderRequest) Reset() {
	*x = GiveOrderRequest{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GiveOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveOrderRequest) ProtoMessage() {}

func (x *GiveOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveOrderRequest.ProtoReflect.Descriptor instead.
func (*GiveOrderRequest) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{6}
}

func (x *GiveOrderRequest) GetOrderIds() []*OrderId {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

type GiveOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GiveOrderResponse) Reset() {
	*x = GiveOrderResponse{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GiveOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveOrderResponse) ProtoMessage() {}

func (x *GiveOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveOrderResponse.ProtoReflect.Descriptor instead.
func (*GiveOrderResponse) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{7}
}

type ReturnOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReturnOrderRequest) Reset() {
	*x = ReturnOrderRequest{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnOrderRequest) ProtoMessage() {}

func (x *ReturnOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnOrderRequest.ProtoReflect.Descriptor instead.
func (*ReturnOrderRequest) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{8}
}

func (x *ReturnOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReturnOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReturnOrderResponse) Reset() {
	*x = ReturnOrderResponse{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnOrderResponse) ProtoMessage() {}

func (x *ReturnOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnOrderResponse.ProtoReflect.Descriptor instead.
func (*ReturnOrderResponse) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{9}
}

type UserOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Last   int64 `protobuf:"varint,2,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *UserOrdersRequest) Reset() {
	*x = UserOrdersRequest{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrdersRequest) ProtoMessage() {}

func (x *UserOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrdersRequest.ProtoReflect.Descriptor instead.
func (*UserOrdersRequest) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{10}
}

func (x *UserOrdersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserOrdersRequest) GetLast() int64 {
	if x != nil {
		return x.Last
	}
	return 0
}

type UserOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderDtos []*OrderDto `protobuf:"bytes,1,rep,name=orderDtos,proto3" json:"orderDtos,omitempty"`
}

func (x *UserOrdersResponse) Reset() {
	*x = UserOrdersResponse{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrdersResponse) ProtoMessage() {}

func (x *UserOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrdersResponse.ProtoReflect.Descriptor instead.
func (*UserOrdersResponse) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{11}
}

func (x *UserOrdersResponse) GetOrderDtos() []*OrderDto {
	if x != nil {
		return x.OrderDtos
	}
	return nil
}

type UserReturnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *UserReturnsRequest) Reset() {
	*x = UserReturnsRequest{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserReturnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReturnsRequest) ProtoMessage() {}

func (x *UserReturnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReturnsRequest.ProtoReflect.Descriptor instead.
func (*UserReturnsRequest) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{12}
}

func (x *UserReturnsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserReturnsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UserReturnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderDtos []*OrderDto `protobuf:"bytes,1,rep,name=orderDtos,proto3" json:"orderDtos,omitempty"`
}

func (x *UserReturnsResponse) Reset() {
	*x = UserReturnsResponse{}
	mi := &file_cli_v1_cliserver_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserReturnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReturnsResponse) ProtoMessage() {}

func (x *UserReturnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_v1_cliserver_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReturnsResponse.ProtoReflect.Descriptor instead.
func (*UserReturnsResponse) Descriptor() ([]byte, []int) {
	return file_cli_v1_cliserver_proto_rawDescGZIP(), []int{13}
}

func (x *UserReturnsResponse) GetOrderDtos() []*OrderDto {
	if x != nil {
		return x.OrderDtos
	}
	return nil
}

var File_cli_v1_cliserver_proto protoreflect.FileDescriptor

var file_cli_v1_cliserver_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6c, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x74,
	0x63, 0x68, 0x22, 0x25, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa9, 0x02, 0x0a, 0x12, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18,
	0x0a, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x03, 0x18, 0x06, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x31, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74,
	0x72, 0x65, 0x74, 0x63, 0x68, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x13,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x47,
	0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22,
	0x13, 0x0a, 0x11, 0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22,
	0x47, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x74,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x73, 0x22, 0x4d, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x74, 0x6f,
	0x73, 0x32, 0xb4, 0x0f, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x12, 0xa9, 0x03, 0x0a, 0x0f, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x12, 0x1d, 0x2e,
	0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63,
	0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd6, 0x02, 0x92,
	0x41, 0xbb, 0x02, 0x12, 0x4a, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd1, 0x8f, 0xd1,
	0x82, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7,
	0xd0, 0xb0, 0x20, 0xd0, 0xbe, 0xd1, 0x82, 0x20, 0xd0, 0xba, 0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c,
	0xd1, 0x80, 0xd0, 0xb0, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xbf, 0xd1, 0x83, 0xd0, 0xbd, 0xd0, 0xba,
	0xd1, 0x82, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb8, 0x1a,
	0xdb, 0x01, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0,
	0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0,
	0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20,
	0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x2c, 0x20, 0xd0, 0xbf,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82,
	0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x2c, 0x20, 0xd1, 0x81, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xba,
	0x20, 0xd1, 0x85, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1,
	0x8f, 0x2c, 0x20, 0xd1, 0x86, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x83, 0x2c, 0x20, 0xd0, 0xb2, 0xd0,
	0xb5, 0xd1, 0x81, 0x2c, 0x20, 0xd1, 0x82, 0xd0, 0xb8, 0xd0, 0xbf, 0x20, 0xd1, 0x83, 0xd0, 0xbf,
	0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xba, 0xd0, 0xb8, 0x20, 0xd0, 0xb8, 0x20,
	0xd0, 0xbd, 0xd1, 0x83, 0xd0, 0xb6, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0xbb, 0xd0, 0xb8, 0x20,
	0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x82,
	0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd0, 0xb0, 0xd1, 0x8f, 0x20, 0xd1, 0x83, 0xd0,
	0xbf, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xba, 0xd0, 0xb0, 0x62, 0x0f, 0x0a,
	0x0d, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x8c, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x47, 0x72, 0x70, 0x63, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb6, 0x01, 0x92, 0x41,
	0x9a, 0x01, 0x12, 0x2f, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd1, 0x8f, 0xd1, 0x82,
	0xd1, 0x8c, 0x20, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1,
	0x82, 0x20, 0xd1, 0x83, 0x20, 0xd0, 0xba, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1,
	0x82, 0xd0, 0xb0, 0x1a, 0x56, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0,
	0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe,
	0xd1, 0x80, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x20,
	0xd0, 0xb8, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0,
	0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x62, 0x0f, 0x0a, 0x0d, 0x0a,
	0x09, 0x61, 0x70, 0x69, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0xf2, 0x01, 0x0a, 0x0d, 0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa5, 0x01, 0x92, 0x41, 0x8c, 0x01, 0x12, 0x2a, 0xd0, 0x92, 0xd1, 0x8b, 0xd0, 0xb4,
	0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0,
	0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xba, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd1, 0x82, 0xd1, 0x83, 0x1a, 0x4d, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8,
	0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd1, 0x81, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1,
	0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82,
	0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80,
	0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0,
	0xbe, 0xd0, 0xb2, 0x62, 0x0f, 0x0a, 0x0d, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x2d, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f,
	0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x9d, 0x02, 0x0a, 0x0f, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x12, 0x1d, 0x2e,
	0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63,
	0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xca, 0x01, 0x92,
	0x41, 0xaf, 0x01, 0x12, 0x28, 0xd0, 0x92, 0xd1, 0x8b, 0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x87, 0xd0,
	0xb0, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x20, 0xd0,
	0xba, 0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c, 0xd0, 0xb5, 0xd1, 0x80, 0xd1, 0x83, 0x1a, 0x72, 0xd0,
	0x92, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x89, 0xd0, 0xb0, 0xd0,
	0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0x20, 0xd1,
	0x81, 0x20, 0xd1, 0x83, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xbd,
	0xd1, 0x8b, 0xd0, 0xbc, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0,
	0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0,
	0xbe, 0xd0, 0xbc, 0x20, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbd,
	0xd0, 0xbe, 0x20, 0xd0, 0xba, 0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c, 0xd0, 0xb5, 0xd1, 0x80, 0xd1,
	0x83, 0x62, 0x0f, 0x0a, 0x0d, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x84, 0x03, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x47, 0x72, 0x70, 0x63, 0x12, 0x1c, 0x2e, 0x63,
	0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb4, 0x02, 0x92, 0x41, 0x9d, 0x02,
	0x12, 0x4f, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd1, 0x8b, 0xd0, 0xb2,
	0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb0, 0xd0, 0xba, 0xd1, 0x82, 0xd1, 0x83, 0xd0,
	0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0,
	0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd1, 0x8b, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1,
	0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1,
	0x8f, 0x1a, 0xc9, 0x01, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc,
	0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1,
	0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1,
	0x80, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2,
	0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xbe,
	0xd0, 0xbf, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xbe, 0xd0, 0xbd, 0xd0, 0xb0, 0xd0, 0xbb, 0xd1, 0x8c,
	0xd0, 0xbd, 0xd0, 0xbe, 0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x87, 0xd0,
	0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd1, 0x81,
	0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x85, 0x20, 0xd0, 0xb7, 0xd0,
	0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0x2c, 0x20, 0xd0, 0xba, 0xd0,
	0xbe, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd1, 0x8b, 0xd0, 0xb5, 0x20, 0xd1, 0x82, 0xd1, 0x80,
	0xd0, 0xb5, 0xd0, 0xb1, 0xd1, 0x83, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x81, 0xd1, 0x8f, 0x20, 0xd0,
	0xb2, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb8, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0xd5, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x47, 0x72, 0x70, 0x63, 0x12, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x82, 0x02, 0x92, 0x41, 0xea, 0x01, 0x12, 0x71, 0xd0, 0x9f, 0xd0, 0xbe,
	0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82,
	0x20, 0xd0, 0xb2, 0xd1, 0x81, 0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0,
	0xd0, 0xb7, 0xd1, 0x8b, 0x2c, 0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80,
	0xd1, 0x8b, 0xd0, 0xb5, 0x20, 0xd0, 0xb1, 0xd1, 0x8b, 0xd0, 0xbb, 0xd0, 0xb8, 0x20, 0xd0, 0xb2,
	0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x89, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd1, 0x8b, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xbf, 0xd1, 0x83, 0xd0, 0xbd, 0xd0, 0xba, 0xd1, 0x82,
	0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb8, 0x1a, 0x75, 0xd0,
	0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1,
	0x82, 0x20, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x86,
	0xd1, 0x83, 0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xbe, 0xd0, 0xbf, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xbe,
	0xd0, 0xbd, 0xd0, 0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd0, 0xbe, 0x20, 0xd1, 0x80, 0xd0,
	0xb0, 0xd0, 0xb7, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x80, 0x20, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x80,
	0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x86, 0xd1, 0x8b, 0x20, 0xd0, 0xb4, 0xd0, 0xbb, 0xd1,
	0x8f, 0x20, 0xd0, 0xbf, 0xd0, 0xb0, 0xd0, 0xb3, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x86,
	0xd0, 0xb8, 0xd0, 0xb8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x42, 0x96, 0x03, 0x92, 0x41, 0xea, 0x02, 0x12,
	0xe3, 0x01, 0x0a, 0x28, 0xd0, 0x9c, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb4, 0xd0, 0xb6, 0xd0, 0xb5,
	0xd1, 0x80, 0x20, 0xd0, 0xbf, 0xd1, 0x83, 0xd0, 0xbd, 0xd0, 0xba, 0xd1, 0x82, 0xd0, 0xb0, 0x20,
	0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb8, 0x12, 0xaf, 0x01, 0xd0,
	0xa1, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1, 0x81, 0x20, 0xd0, 0xb2, 0xd1, 0x8b,
	0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xbd, 0xd1, 0x8f, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd1,
	0x84, 0xd1, 0x83, 0xd0, 0xbd, 0xd0, 0xba, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x20, 0xd0, 0xbf,
	0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb5, 0xd0, 0xbc, 0xd0, 0xb0, 0x2c, 0x20, 0xd0, 0xb2, 0xd1, 0x8b,
	0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb8, 0x2c, 0x20, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb7,
	0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb0, 0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xbf,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x8f,
	0x20, 0xd0, 0xb8, 0xd0, 0xbd, 0xd1, 0x84, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xbc, 0xd0, 0xb0, 0xd1,
	0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0x20, 0xd0, 0xb0, 0xd0, 0xba, 0xd1,
	0x82, 0xd1, 0x83, 0xd0, 0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xbc, 0x20,
	0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbc, 0x32, 0x05,
	0x31, 0x2e, 0x30, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74,
	0x3a, 0x37, 0x30, 0x30, 0x32, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x4b, 0x0a, 0x49,
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3c, 0x08, 0x02, 0x12,
	0x29, 0xd0, 0x90, 0xd0, 0xb2, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb7, 0xd0,
	0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xbe, 0xd0, 0xbd, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb9, 0x20,
	0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb5, 0xd0, 0xbd, 0x1a, 0x0b, 0x78, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x02, 0x5a, 0x26, 0x68, 0x6f, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x31, 0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6c,
	0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3b, 0x63, 0x6c, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cli_v1_cliserver_proto_rawDescOnce sync.Once
	file_cli_v1_cliserver_proto_rawDescData = file_cli_v1_cliserver_proto_rawDesc
)

func file_cli_v1_cliserver_proto_rawDescGZIP() []byte {
	file_cli_v1_cliserver_proto_rawDescOnce.Do(func() {
		file_cli_v1_cliserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_cli_v1_cliserver_proto_rawDescData)
	})
	return file_cli_v1_cliserver_proto_rawDescData
}

var file_cli_v1_cliserver_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cli_v1_cliserver_proto_goTypes = []any{
	(*OrderDto)(nil),             // 0: cliserver.OrderDto
	(*OrderId)(nil),              // 1: cliserver.OrderId
	(*AcceptOrderRequest)(nil),   // 2: cliserver.AcceptOrderRequest
	(*AcceptOrderResponse)(nil),  // 3: cliserver.AcceptOrderResponse
	(*AcceptReturnRequest)(nil),  // 4: cliserver.AcceptReturnRequest
	(*AcceptReturnResponse)(nil), // 5: cliserver.AcceptReturnResponse
	(*GiveOrderRequest)(nil),     // 6: cliserver.GiveOrderRequest
	(*GiveOrderResponse)(nil),    // 7: cliserver.GiveOrderResponse
	(*ReturnOrderRequest)(nil),   // 8: cliserver.ReturnOrderRequest
	(*ReturnOrderResponse)(nil),  // 9: cliserver.ReturnOrderResponse
	(*UserOrdersRequest)(nil),    // 10: cliserver.UserOrdersRequest
	(*UserOrdersResponse)(nil),   // 11: cliserver.UserOrdersResponse
	(*UserReturnsRequest)(nil),   // 12: cliserver.UserReturnsRequest
	(*UserReturnsResponse)(nil),  // 13: cliserver.UserReturnsResponse
}
var file_cli_v1_cliserver_proto_depIdxs = []int32{
	1,  // 0: cliserver.GiveOrderRequest.orderIds:type_name -> cliserver.OrderId
	0,  // 1: cliserver.UserOrdersResponse.orderDtos:type_name -> cliserver.OrderDto
	0,  // 2: cliserver.UserReturnsResponse.orderDtos:type_name -> cliserver.OrderDto
	2,  // 3: cliserver.cli.AcceptOrderGrpc:input_type -> cliserver.AcceptOrderRequest
	4,  // 4: cliserver.cli.AcceptReturnGrpc:input_type -> cliserver.AcceptReturnRequest
	6,  // 5: cliserver.cli.GiveOrderGrpc:input_type -> cliserver.GiveOrderRequest
	8,  // 6: cliserver.cli.ReturnOrderGrpc:input_type -> cliserver.ReturnOrderRequest
	10, // 7: cliserver.cli.UserOrdersGrpc:input_type -> cliserver.UserOrdersRequest
	12, // 8: cliserver.cli.UserReturnsGrpc:input_type -> cliserver.UserReturnsRequest
	3,  // 9: cliserver.cli.AcceptOrderGrpc:output_type -> cliserver.AcceptOrderResponse
	5,  // 10: cliserver.cli.AcceptReturnGrpc:output_type -> cliserver.AcceptReturnResponse
	7,  // 11: cliserver.cli.GiveOrderGrpc:output_type -> cliserver.GiveOrderResponse
	9,  // 12: cliserver.cli.ReturnOrderGrpc:output_type -> cliserver.ReturnOrderResponse
	11, // 13: cliserver.cli.UserOrdersGrpc:output_type -> cliserver.UserOrdersResponse
	13, // 14: cliserver.cli.UserReturnsGrpc:output_type -> cliserver.UserReturnsResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_cli_v1_cliserver_proto_init() }
func file_cli_v1_cliserver_proto_init() {
	if File_cli_v1_cliserver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cli_v1_cliserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cli_v1_cliserver_proto_goTypes,
		DependencyIndexes: file_cli_v1_cliserver_proto_depIdxs,
		MessageInfos:      file_cli_v1_cliserver_proto_msgTypes,
	}.Build()
	File_cli_v1_cliserver_proto = out.File
	file_cli_v1_cliserver_proto_rawDesc = nil
	file_cli_v1_cliserver_proto_goTypes = nil
	file_cli_v1_cliserver_proto_depIdxs = nil
}
